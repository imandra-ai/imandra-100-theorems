(* Two proofs of the Pythagorean theorem in Imandra.
   Theorem 4 in the 100 Theorems list.

   G.Passmore, Imandra *)

(* Coordinate-level statement, purely polynomial in 6 reals *)

theorem pythagoras_coords
  (ax:real) (ay:real)
  (bx:real) (by:real)
  (cx:real) (cy:real) =
  let open Real in
  (* Right angle at C *)
  (((ax - cx) * (bx - cx) + (ay - cy) * (by - cy)) = 0.0)
  ==> 
  (* Pythagoras on squared distances *)
  (((ax - bx) * (ax - bx) + (ay - by) * (ay - by))
    =
   ((ax - cx) * (ax - cx) + (ay - cy) * (ay - cy)
    + (bx - cx) * (bx - cx) + (by - cy) * (by - cy)))
[@@by auto]

(* Now let's also do a version with geometric predicates over R^2 *)

type point = { x : real; y : real }

let sub (p : point) (q : point) : point =
  let open Real in
  { x = p.x - q.x; y = p.y - q.y }

let dot (u : point) (v : point) : real =
  let open Real in
  u.x * v.x + u.y * v.y

(* Squared norm and squared distance (no sqrt) *)
let norm2 (u : point) : real = dot u u

let dist2 (p : point) (q : point) : real =
  norm2 (sub p q)

(* Right angle at c means (a - c) Â· (b - c) = 0 *)
let right_at (c : point) (a : point) (b : point) : bool =
  let open Real in
  dot (sub a c) (sub b c) = 0.0

(* Pythagorean theorem in predicate form *)

lemma pythagoras (a : point) (b : point) (c : point) =
  right_at c a b ==> dist2 a b = Real.(dist2 a c + dist2 b c)
[@@by auto]
